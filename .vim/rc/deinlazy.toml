#Unite {{{
[[plugins]]
repo = 'Shougo/unite.vim'
depends = ['neomru.vim','neoyank.vim','vimproc.vim']
on_source = 'denite.nvim'
hook_source = 'source ~/.vim/rc/plugins/unite.rc.vim'
hook_add = '''
  nnoremap [unite] <Nop>
  nmap <Space>u [unite]
  nnoremap [unite]u :<C-u>Unite<Space>
  nnoremap [unite]m :<C-u>Unite file_mru<CR>
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
hook_source = '''
  let g:neomrm#follow_links = 1
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'

[[plugins]]
repo = 'Shougo/unite-build'
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'
on_source = 'unite.vim'

[[plugins]]
repo = 'eagletmt/unite-haddock'
on_ft = 'haskell'

[[plugins]]
repo = 'Shougo/unite-help'
on_source = 'unite.vim'

[[plugins]]
repo = 'tsukkee/unite-tag'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/unite-outline'
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/unite-font'
on_source = 'unite.vim'

[[plugins]]
repo = 'tacroe/unite-mark'
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-quickfix'
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/quicklearn'
on_source = 'unite.vim'
depends = ['vim-quickrun']

[[plugins]]
repo = 'osyo-manga/unite-fold'
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-filetype'
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-quickrun_config'
on_source = 'unite.vim'
depends = ['vim-quickrun']

[[plugins]]
repo = 'lambdalisue/unite-linephrase'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/unite-session'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/tabpagebuffer.vim'
depends = ['unite.vim','vimfiler.vim','vimshell.vim']

[[plugins]]
repo = 'daisuzu/unite-notmuch'
on_source = 'unite.vim'

[[plugins]]
repo = 'mattn/unite-advent_calendar'
on_source = 'unite.vim'

[[plugins]]
repo = 'supermomonga/unite-sudden-death'
on_source = 'unite.vim'

[[plugins]]
repo = 'LeafCage/unite-gvimrgb'
on_source = 'unite.vim'

[[plugins]]
repo = 'kmnk/vim-unite-giti'
on_source = 'unite.vim'

[[plugins]]
repo = 'zhaocai/unite-scriptnames'
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/unite-locate'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/neossh.vim'
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/unite-haskellimport'
on_source = 'unite.vim'
on_ft = 'haskell'

[[plugins]]
repo = 'rhysd/unite-ruby-require.vim'
on_source = 'unite.vim'
on_ft = 'ruby'

[[plugins]]
repo = 'osyo-manga/unite-highlight'
on_source = 'unite.vim'

[[plugins]]
repo = 'mattn/startmenu-vim'
on_source = 'unite.vim'
# }}}

# lightline {{{
[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['tagbar','vim-watchdogs','vim-fugitive','vim-gitgutter','vim-anzu']
hook_source = 'source ~/.vim/rc/plugins/lightline.rc.vim'
#setfiletype hogeするとステータスバーが真っ黒になる謎の現象の対処策
#本来は元を叩くべきだけどこんだけプラグイン多いと原因がわかんね〜
#neocompleteを消すと上手くいく...。
hook_post_source = '''
  augroup MyAutoCmd
    autocmd FileType * call lightline#colorscheme()
  augroup END
'''
on_i = 1

[[plugins]]
repo = 'osyo-manga/vim-watchdogs'
hook_source = 'source ~/.vim/rc/plugins/vim-watchdogs.rc.vim'
depends = ['vim-quickrun', 'vimproc.vim', 'shabadou.vim', 'vim-hier', 'quickfixstatus', 'vim-qfstatusline', 'vim-qfsigns']
on_ft = ['c', 'cpp', 'vim','python', 'ruby', 'haskell','java','tex','go']

[[plugins]]
repo = 'thinca/vim-quickrun'
depends = 'vimproc.vim'
on_cmd = 'Quickrun'
hook_source = 'source ~/.vim/rc/plugins/vim-quickrun.rc.vim'

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'cohama/vim-hier'

[[plugins]]
repo = 'dannyob/quickfixstatus'
hook_source = 'source ~/.vim/rc/plugins/quickfixstatus.rc.vim'

[[plugins]]
repo = 'KazuakiM/vim-qfstatusline'

[[plugins]]
repo = 'KazuakiM/vim-qfsigns'

[[plugins]]
repo = 'majutsushi/tagbar'
hook_source = 'source ~/.vim/rc/plugins/tagbar.rc.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'
on_cmd = ['Gw', 'Gblame', 'Gbrowse', 'Gcommit', 'Gdiff', 'Gedit']
on_ft = ['c', 'cpp', 'vim','python', 'ruby', 'haskell', 'java','tex','go']
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_cmd = ['GitGutter', 'GitGutterAll', 'GitGutterDisable', 'write' ,'edit']
hook_source = 'source ~/.vim/rc/plugins/vim-gitgutter.rc.vim'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'osyo-manga/vim-anzu'
on_map = {n = '<Plug>'}
#}}}

# neocomplete {{{
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
hook_source = 'source ~/.vim/rc/plugins/deoplete.rc.vim'
if = "has('nvim')"
on_i = 1

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "has('lua')"
on_event = 'InsertEnter'
hook_source = 'source ~/.vim/rc/plugins/neocomplete.rc.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['vim-snippets','neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = 'source ~/.vim/rc/plugins/neosnippet.rc.vim'
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'ujihisa/neco-look'
depends = 'neocomplete.vim'
on_ft = ['text','tex','git','gitcommit']

[[plugins]]
repo = 'hrsh7th/vim-neco-calc'
on_source = 'neocomplete.vim'

[[plugins]]
repo = 'Shougo/neco-syntax'
on_source = 'neocomplete.vim'


[[plugins]]
repo = 'Shougo/neopairs.vim'
on_source = 'neocomplete.vim'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_source = 'neocomplete.vim'

#}}}

#vimshell {{{
[[plugins]]
repo = 'Shougo/vimshell.vim'
on_map = {n = '<Plug>'}
on_if = "!has('nvim')"
depends  = ['vimproc.vim']
hook_source = 'source ~/.vim/rc/plugins/vimshell.rc.vim'
hook_add = '''
  noremap [vimshell] <Nop>
  map <Space>v [VimShell]
  nnoremap [VimShell]v :<C-u>VimShellBufferDir<CR>
  nnoremap [VimShell]s :vs<CR>:<C-u>VimShellBufferDir<CR>
  nnoremap [VimShell]t :<C-u>VimShellTab<CR>
  nnoremap [VimShell]p :<C-u>VimShellPop<CR>
  nnoremap [VimShell]i :<C-u>VimShellInteractive<Space>
  nnoremap [VimShell]c :<C-u>VimShellCreate<CR>
'''

[[plugins]]
repo = 'supermomonga/vimshell-pure.vim'
on_source = 'vimshell.vim'

#}}}

#VimFiler {{{
[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = ['unite.vim']
on_map = {n = '<Plug>'}
on_if = "isdirectory(bufname('%'))"
hook_source = 'source ~/.vim/rc/plugins/vimFiler.rc.vim'
hook_add = '''
  noremap [VimFiler] <Nop>
  map <Space>f [VimFiler]
  noremap <silent> [VimFiler]f :<C-u>VimFiler<CR>
  noremap <silent> [VimFiler]s :<C-u>VimFilerBufferDir -split -simple  -winwidth=35 -no-quit<CR>
  noremap <silent> [VimFiler]d :<C-u>VimFilerDouble<CR>
  noremap <silent> [VimFiler]t :<C-u>VimFilerTab<CR>
'''
#}}}

#caw.vim {{{
[[plugins]]
repo = 'tyru/caw.vim'
on_map = {nv = '<Plug>'}
hook_source = 'source ~/.vim/rc/plugins/caw.rc.vim'
hook_add = '''
nmap <C-J> <Plug>(caw:hatpos:toggle)
vmap <C-J> <Plug>(caw:hatpos:toggle)
'''
on_i = 1
# #}}}

# Haskell tool {{{
[[plugins]]
repo = 'eagletmt/neco-ghc'
hook_source = 'source ~/.vim/rc/plugins/neco-ghc.rc.vim'
on_ft = 'haskell'

[[plugins]]
repo = 'eagletmt/ghcmod-vim'
depends = ['vimproc.vim']
on_ft = 'haskell'

[[plugins]]
repo = 'pbrisbin/vim-syntax-shakespeare'
on_ft = 'haskell'

[[plugins]]
repo = 'itchyny/vim-haskell-sort-import'
on_ft = 'haskell'

[[plugins]]
repo = 'ujihisa/ref-hoogle'
on_ft = 'haskell'
#}}}

#C/C++ tool {{{
[[plugins]]
repo = 'rhysd/vim-clang-format'
hook_source = 'source ~/.vim/rc/plugins/vim-clang-format.rc.vim'
on_ft = ['c','cpp']
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'osyo-manga/vim-marching'
depends = 'neocomplete.vim'
hook_source = 'source ~/.vim/rc/plugins/vim-marching.rc.vim'
on_ft = ['c','cpp']
#}}}

#Ruby tool {{{

[[plugins]]
repo = 'osyo-manga/vim-monster'
depends = 'neocomplete.vim'
hook_source = 'source ~/.vim/rc/plugins/vim-monster.rc.vim'
on_ft = 'ruby'
if = "executable('rct-complete')"

#}}}

#Java tool {{{

[[plugins]]
repo = 'artur-shaik/vim-javacomplete2'
depends = 'neocomplete.vim'
on_ft = 'java'

[[plugins]]
repo = 'kamichidu/vim-ref-java'
depends = 'vim-ref'
on_ft = 'java'

#}}}

#Tex {{{
[[plugins]]
repo = 'lervag/vimtex'
hook_source = 'source ~/.vim/rc/plugins/vimtex.rc.vim'
on_ft = ['plaintex','tex']
#}}}

#Go tool{{{
[[plugins]]
repo = 'fatih/vim-go'
hook_source = 'source ~/.vim/rc/plugins/vim-go.rc.vim'
on_ft = 'go'

[[plugins]]
repo = 'vim-jp/vim-go-extra'
on_ft = 'go'
#}}}

#scala tool {{{
[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = 'scala'
#}}}

#elixir tool {{{
[[plugins]]
repo = 'elixir-lang/vim-elixir'
on_ft = 'elixir'
#}}}

#other programing tool{{{

[[plugins]]
repo = 'mattn/sonictemplate-vim'
on_ft = ['c', 'cpp', 'vim','python', 'ruby', 'haskell', 'java','tex','go']

[[plugins]]
repo = 'kien/ctrlp.vim'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]] 
repo = 'osyo-manga/vim-precious'
on_source = 'context_filetype.vim'
hook_source = 'source ~/.vim/rc/plugins/vim-precious.rc.vim'

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_i = 1

[[plugins]]
repo = 't9md/vim-quickhl'
on_ft = ['c', 'cpp', 'vim','python', 'ruby', 'haskell', 'java','tex','go']
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'wesleyche/SrcExpl'
on_map = {n = '<Plug>'}
hook_source = 'source ~/.vim/rc/plugins/SrcExpl.rc.vim'
on_cmd = [ 'SrcExpl', 'SrcExplToggle']

[[plugins]]
repo = 'wesleyche/Trinity'
on_ft = ['c', 'cpp', 'vim','python', 'ruby', 'haskell', 'java','tex','go']

[[plugins]]
repo = 'mattn/benchvimrc-vim'
on_cmd = 'BenchVimrc'

[[plugins]]
repo = 'mattn/ideone-vim'
hook_source = 'source ~/.vim/rc/plugins/ideone-vim.rc.vim'
on_cmd = 'Ideone'

[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = 'Vinarise'
hook_source = 'source ~/.vim/rc/plugins/vinarise.rc.vim'
on_source = ['unite.vim','vimfiler.vim']
hook_add = 'let g:vinarise_enable_auto_detect = 1'

[[plugins]]
repo = 'mbbill/undotree'
on_cmd = 'UndotreeToggle'
hook_source = 'source ~/.vim/rc/plugins/undotree.rc.vim'
on_map = {n = '<plug>'}

[[plugins]]
repo = 'vim-scripts/diffchar.vim'
hook_source = 'source ~/.vim/rc/plugins/diffchar.rc.vim'
on_map = {n = '<plug>'}

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'rhysd/committia.vim'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'cohama/agit.vim'
on_cmd = 'Agit'

[[plugins]]
repo = 'idanarye/vim-merginal'
on_cmd = 'Merginal'

[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = ['c', 'cpp', 'vim','python', 'ruby', 'haskell', 'java','tex','go']

#ref-hoogle側にdepends記述ではエラーが出た。
[[plugins]]
repo = 'thinca/vim-ref'
on_source = ['unite.vim','ref-hoogle']
on_cmd = 'Ref'

[[plugins]]
repo = 'vimtaku/hl_matchit.vim'
on_ft = ['vim','ruby']

#}}}

#others{{{

[[plugins]]
repo = 'Shougo/neobundle.vim'

#TweetVim{{{
[[plugins]]
repo = 'basyura/TweetVim'
depends = ['unite.vim','twibill.vim', 'open-browser.vim', 'bitly.vim', 'webapi-vim', 'neco-tweetvim']
hook_source = 'source ~/.vim/rc/plugins/TweetVim.rc.vim'
on_source = 'unite.vim'

[[plugins]]
repo = 'basyura/bitly.vim'

[[plugins]] 
repo = 'mattn/webapi-vim'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'basyura/twibill.vim'

[[plugins]]
repo = 'yomi322/neco-tweetvim'
#}}}

[[plugins]]
repo = 'davidoc/taskpaper.vim'
on_ft = 'taskpaper'

[[plugins]]
repo = 'lilydjwg/fcitx.vim'
on_if = 'has("python3")'
on_i = 1

[[plugins]]
repo = 'rking/ag.vim'
on_cmd = ['Ag','AgBuffer','AgAdd']

[[plugins]]
repo = 'thinca/vim-fontzoom'
on_cmd = 'Fontzoom'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'tyru/open-browser.vim'
on_cmd = ['OpenBrowser','OpenBrowserSearch']
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'yuratomo/gmail.vim'
hook_source = 'source ~/.vim/rc/plugins/gmail.rc.vim'
on_cmd = ['Gmail','GmailCheckNewMail']

[[plugins]]
repo = 'yuratomo/weather.vim'
on_cmd = 'Weather'

[[plugins]]
repo = 'yuratomo/w3m.vim'
on_map = {n = '<Plug>'}
on_cmd = [ 'W3m', 'W3mSpilit', 'W3mVSpilit' ]

[[plugins]]
repo = 'kana/vim-smartword'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'kana/vim-metarw'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'mattn/vim-metarw-gdrive'
depends = 'vim-metarw'

[[plugins]]
repo = 'itchyny/calendar.vim'
hook_source = 'source ~/.vim/rc/plugins/calender.rc.vim'
on_cmd = 'Calendar'

[[plugins]]
repo = 'supermomonga/shaberu.vim'
hook_source = 'source ~/.vim/rc/plugins/shaberu.rc.vim'
on_cmd = 'ShaberuSay'

[[plugins]]
repo = 'supermomonga/thingspast.vim'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'koron/chalice'
on_cmd = 'Chalice'

#easymotion{{{
[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_source = 'source ~/.vim/rc/plugins/vim-easymotion.rc.vim'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'haya14busa/incsearch.vim'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'haya14busa/incsearch-easymotion.vim'
depends = ['vim-easymotion','incsearch.vim']
on_map = {n = '<Plug>'}
on_i = 1
#}}}

#Game{{{
[[plugins]]
repo = 'katono/rogue.vim'
on_cmd = ['Rogue', 'RogueRestore', 'RogueResume', 'RogueScores']
disabled = '!has("lua")'

[[plugins]]
repo = 'rbtnn/game_engine.vim'

[[plugins]]
repo = 'mattn/habatobi-vim'
on_cmd = 'Habatobi'

[[plugins]]
repo = 'rbtnn/puyo.vim'
depends = 'game_engine.vim'
on_cmd = 'Puyo'

[[plugins]]
repo = 'mmisono/viminesweeper'
on_cmd = 'MineSweeper'

[[plugins]]
repo = 'mmisono/lightsout.vim'
on_cmd = 'LightOut'

[[plugins]]
repo = 'deris/vim-duzzle'
on_cmd = 'DuzzleStart'

[[plugins]]
repo = 'koron/maze3d-vim'
on_cmd = 'Maze3DStart'
#}}}


#}}}

#ColorScheme{{{
[[plugins]]
repo = 'altercation/vim-colors-solarized'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'croaker/mustang-vim'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'jeffreyiacono/vim-colors-wombat'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'nanotech/jellybeans.vim'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'vim-scripts/Lucius'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'vim-scripts/Zenburn'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'mrkn/mrkn256.vim'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'jpo/vim-railscasts-theme'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'therubymug/vim-pyte'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'w0ng/vim-hybrid'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'sjl/badwolf'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'vim-scripts/phd'
on_source = 'unite-colorscheme'

[[plugins]]
repo = 'changyuheng/color-scheme-holokai-for-vim'
on_source = 'unite-colorscheme'
#}}}

#textobj{{{ 
[[plugins]]
repo = 'kana/vim-textobj-user'
on_i = 1

# バッファ全体 ae ie
[[plugins]]
repo = 'kana/vim-textobj-entire'
depends = 'vim-textobj-user'
on_i = 1

# カーソル行 al il
[[plugins]]
repo = 'kana/vim-textobj-line'
depends = 'vim-textobj-user'
on_i = 1

# 関数内 aF iF
[[plugins]]
repo = 'kana/vim-textobj-function'
depends = 'vim-textobj-user'
on_i = 1

#シンタックス ay iy
[[plugins]]
repo = 'kana/vim-textobj-syntax'
depends = 'vim-textobj-user'
on_i = 1

# 「foo」 or 【bar】など ajk ijk ajt ijt
[[plugins]]
repo = 'kana/vim-textobj-jabraces'
depends = 'vim-textobj-user'
on_i = 1

# 最後に検索されたパターン a/ i/ a? i?
[[plugins]]
repo = 'kana/vim-textobj-lastpat'
depends = 'vim-textobj-user'
on_i = 1

# カーソル位置と同じインデント ai ii aI iI
[[plugins]]
repo = 'kana/vim-textobj-indent'
depends = 'vim-textobj-user'
on_i = 1

# fold az iz
[[plugins]]
repo = 'kana/vim-textobj-fold'
depends = 'vim-textobj-user'
on_i = 1

# 日付と時刻
[[plugins]]
repo = 'kana/vim-textobj-datetime'
depends = 'vim-textobj-user'
on_i = 1

# django_template
[[plugins]]
repo = 'kana/vim-textobj-django-template'
depends = 'vim-textobj-user'
on_i = 1

#任意の区切り文字
[[plugins]]
repo = 'thinca/vim-textobj-between'
depends = 'vim-textobj-user'
on_i = 1

#コメント
[[plugins]]
repo = 'thinca/vim-textobj-comment'
depends = 'vim-textobj-user'
on_i = 1

# JavaScript の関数内
[[plugins]]
repo = 'thinca/vim-textobj-function-javascript'
depends = 'vim-textobj-user'
on_i = 1

# Perl の関数内
[[plugins]]
repo = 'thinca/vim-textobj-function-perl'
depends = 'vim-textobj-user'
on_i = 1

# 直前に変更またはヤンクされたテキスト
[[plugins]]
repo = 'gilligan/textobj-lastpaste'
depends = 'vim-textobj-user'
on_i = 1

# ASCII文字とマルチバイト文字の境界を区切り
[[plugins]]
repo = 'deton/textobj-mbboundary.vim'
depends = 'vim-textobj-user'
on_i = 1

# XML の属性
[[plugins]]
repo = 'akiyan/vim-textobj-xml-attribute'
depends = 'vim-textobj-user'
on_i = 1

# phpタグに囲まれた部分
[[plugins]]
repo = 'akiyan/vim-textobj-php'
depends = 'vim-textobj-user'
on_i = 1

# 連続したスペース
[[plugins]]
repo = 'saihoooooooo/vim-textobj-space'
depends = 'vim-textobj-user'
on_i = 1

# URL
[[plugins]]
repo = 'mattn/vim-textobj-url'
depends = 'vim-textobj-user'
on_i = 1

# snake_case 上の word
[[plugins]]
repo = 'h1mesuke/textobj-wiw'
depends = 'vim-textobj-user'
on_i = 1

# テキストオブジェクトとして最後に挿入された範囲
[[plugins]]
repo = 'rhysd/vim-textobj-lastinserted'
depends = 'vim-textobj-user'
on_i = 1

# 行継続を用いている行
[[plugins]]
repo = 'rhysd/vim-textobj-continuous-line'
depends = 'vim-textobj-user'
on_i = 1

# Ruby のブロック ar ir
[[plugins]]
repo = 'rhysd/vim-textobj-ruby'
depends = 'vim-textobj-user'
on_i = 1

# 任意の2つの motion の間
[[plugins]]
repo = 'hchbaw/textobj-motionmotion.vim'
depends = 'vim-textobj-user'
on_i = 1

# Perl や Ruby の正規表現
[[plugins]]
repo = 'deris/vim-textobj-enclosedsyntax'
depends = 'vim-textobj-user'
on_i = 1

# 行の先頭の word
[[plugins]]
repo = 'deris/vim-textobj-headwordofline'
depends = 'vim-textobj-user'
on_i = 1

# LaTeX
[[plugins]]
repo = 'rbonvall/vim-textobj-latex'
depends = 'vim-textobj-user'
on_i = 1

# 関数の引数
[[plugins]]
repo = 'sgur/vim-textobj-parameter'
depends = 'vim-textobj-user'
on_i = 1

# 前後のスペースを取り除いたカーソル行
[[plugins]]
repo = 'mattn/vim-textobj-cell'
depends = 'vim-textobj-user'
on_i = 1

# 別の filetype のコンテキスト
[[plugins]]
repo = 'osyo-manga/vim-textobj-context'
depends = 'vim-textobj-user'
on_i = 1

# 任意の複数の括弧のいずれか
[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'
depends = 'vim-textobj-user'
on_i = 1

# インデントの空白行
[[plugins]]
repo = 'glts/vim-textobj-indblock'
depends = 'vim-textobj-user'
on_i = 1

# ダッシュ記号の間
[[plugins]]
repo = 'RyanMcG/vim-textobj-dash'
depends = 'vim-textobj-user'
on_i = 1

# Python
[[plugins]]
repo = 'bps/vim-textobj-python'
depends = 'vim-textobj-user'
on_i = 1

# ifdef
[[plugins]]
repo = 'anyakichi/vim-textobj-ifdef'
depends = 'vim-textobj-user'
on_i = 1

# HTML
[[plugins]]
repo = 'mjbrownie/html-textobjects'
depends = 'vim-textobj-user'
on_i = 1


[[plugins]]
repo = 'osyo-manga/vim-textobj-blockwise'
depends = 'vim-textobj-user'
on_i = 1

#}}}

#operator{{{

[[plugins]]
repo = 'kana/vim-operator-user'
on_i = 1

[[plugins]]
repo = 'emonkak/vim-operator-comment'
on_i = 1

[[plugins]]
repo = 'tyru/operator-camelize.vim'
on_i = 1

[[plugins]]
repo = 'kana/vim-operator-replace'
on_i = 1

[[plugins]]
repo = 'rhysd/vim-operator-surround'
on_i = 1

[[plugins]]
repo = 'emonkak/vim-operator-sort'
on_i = 1

[[plugins]]
repo = 'pekepeke/vim-operator-shuffle'
on_i = 1

[[plugins]]
repo = 'rhysd/vim-operator-evalruby'
on_i = 1

[[plugins]]
repo = 'rhysd/vim-operator-filled-with-blank'
on_i = 1

[[plugins]]
repo = 'rhysd/vim-operator-trailingspace-killer'
on_i = 1

[[plugins]]
repo = 'sgur/vim-operator-openbrowser'
on_i = 1

[[plugins]]
repo = 'tek/vim-operator-ag'
on_i = 1

[[plugins]]
repo = 'tyru/operator-reverse.vim'
on_i = 1

[[plugins]]
repo = 'yomi322/vim-operator-suddendeath'
on_i = 1

#}}}

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

#vim: foldmethod=marker
#vim: foldlevel=0
